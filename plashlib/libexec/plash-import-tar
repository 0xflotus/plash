#!/usr/bin/env python3
#
# usage: plash import-tar-as TARFILE
# Create a container from a tar file

import os
import sys
import tarfile
from os.path import join
from tempfile import mkdtemp
from subprocess import check_call, CalledProcessError

from plashlib.utils import catch_and_die, die_with_usage, handle_help_flag, get_plash_data
from plashlib import ux
from plashlib.unshare import unshare_if_user

handle_help_flag()
ux.assert_initialized()

try:
    tar_file = sys.argv[1]
except IndexError:
    die_with_usage()

class PlashTarFile(tarfile.TarFile):
    def makedev(self, tarinfo, targetpath):
        try:
            tarfile.TarFile.makedev(self, tarinfo, targetpath)
        except PermissionError as exc:
            print('Ignoring dev file: {}'.format(tarinfo.path), file=sys.stderr)

rootfs = mkdtemp(dir=join(get_plash_data(), 'tmp'))
if tar_file == '-':
    t = PlashTarFile.open(fileobj=sys.stdin.buffer, mode='r|')
else:
    t = PlashTarFile.open(tar_file)

unshare_if_user()
t.extractall(rootfs)

# we want /etc/resolv to not by a symlink or not to not exist - that makes the later mount not work #FIXME: add a layer for that
resolvconf = join(rootfs, 'etc/resolv.conf')
try:
    os.unlink(resolvconf)
except FileNotFoundError:
    pass
with open(resolvconf, 'w') as f:
    f.seek(0)
    f.truncate()

with catch_and_die([CalledProcessError]):
    check_call(['plash-add-layer', '0', rootfs])
