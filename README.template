set -eu

PLASH_DATA=$(mktemp -d)
export PLASH_DATA

function cleanup {
    rm -r $PLASH_DATA
}
trap cleanup EXIT

# the we must initilaize the storage directory
plash-init

# build a simple image
plash-build --image ubuntu --run 'touch /file'
# second build is cached
plash-build --image ubuntu --run 'touch /file'

# run something inside a container
plash-run 2 file /file

# layering is explicit
plash-build --image ubuntu --run 'touch /file' --layer --run 'touch /file2'

# delete a container
plash-rm 3

# build and run in one command
plash-run --image ubuntu --run 'touch /file' -- file /file

# you can easily mount, execute a command on the filesystem, then unmount.
plash-with-mount --image alpine -- ls
plash-with-mount -i alpine -- chroot . /bin/sh
exit

# plash actually includes some configuration management 
plash-run --image alpine --apk git -- git --version

echo '#!/usr/bin/env plash-exec
# plash-exec: exec=fzf
--image
ubuntu
--apt
wget
--run
cd $(mktemp -d)
wget https://github.com/junegunn/fzf-bin/releases/download/0.17.3/fzf-0.17.3-linux_amd64.tgz
tar xvzf *.tgz
cp fzf /usr/local/bin/fzf' > /tmp/fzf

chmod +x /tmp/fzf
/tmp/fzf --version

exit
: ENDMARK
