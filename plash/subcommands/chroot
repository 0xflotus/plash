#!/usr/bin/env python3

# write this as c with setuid - in a secure manner

import argparse
import os
import shutil
import subprocess
import sys
from os.path import join
from sys import argv
from tempfile import mkdtemp

from plash.utils import run  # get rid of all plash deps?

BASE_DIR = os.environ['PLASH_DATA']
TMP_DIR = os.path.join(BASE_DIR, 'tmp')
MNT_DIR = os.path.join(BASE_DIR, 'mnt')



parser = argparse.ArgumentParser(
    description='fancy chroot wrapper',
    prog='plash chroot',
    epilog='my help here')

# parser.add_argument("--cwd", default='/')
parser.add_argument("chroot_to", nargs=1)
parser.add_argument("command", nargs='+')
parser.add_argument("--mount-home", action='store_true')
parser.add_argument("--cow")
parser.add_argument("--cwd")
args = parser.parse_args()

pidsuffix = '.{}'.format(os.getpid())


workdir = mkdtemp(dir=TMP_DIR)
if not args.cow:
    changes = mkdtemp(dir=TMP_DIR)
else:
    changes = args.cow

mountpoint = mkdtemp(dir=MNT_DIR, suffix=pidsuffix)


# os.mkdir(join(mountpoint, 'proc'))
# os.mkdir(join(mountpoint, 'sys'))
# os.mkdir(join(mountpoint, 'dev'))
# run(['mount', '--rbind', '/proc', join(mountpoint, 'proc')])

p = subprocess.Popen(['mount', '-t', 'overlay', 'overlay', '-o',
                      'upperdir={write_dir},lowerdir={lowerdir},workdir={workdir}'.format(
                      write_dir=changes, lowerdir=args.chroot_to[0], workdir=workdir), mountpoint])
assert not p.wait()

run(['mount', '-t', 'proc', 'proc', join(mountpoint, 'proc')])
run(['mount', '--bind', '/sys', join(mountpoint, 'sys')])
run(['mount', '--bind', '/dev', join(mountpoint, 'dev')])
run(['mount', '--bind', '/dev/pts', join(mountpoint, 'dev', 'pts')])
run(['mount', '--bind', '/dev/shm', join(mountpoint, 'dev', 'shm')])
run(['mount', '--bind', '/tmp', join(mountpoint, 'tmp')])

if args.mount_home:
    run(['mount', '--bind', '/home', join(mountpoint, 'home')])


# run(['mount', '--bind', '/run', join(mountpoint, 'run')])

run(['mount', '--bind', '/etc/passwd', join(mountpoint, 'etc', 'passwd')]) # READONLY!! only copy this user to that!
run(['mount', '--bind', '/etc/shadow', join(mountpoint, 'etc', 'shadow')]) # READONLY!!
# run(['mount', '--bind', '/tmp', join(mountpoint, 'tmp')])
# run(['cp', '/etc/resolv.conf', join(mountpoint, 'etc/resolv.conf')])

# # its ok to delete it because int our case theres a layered fs
try:
    os.remove(join(mountpoint, 'etc/resolv.conf'))
except FileNotFoundError:
    pass
shutil.copy('/etc/resolv.conf', join(mountpoint, 'etc/resolv.conf'))

os.chmod(mountpoint, 0o0755)
os.chroot(mountpoint)

os.chdir(args.cwd)

# setuid stuff here

os.execvpe(args.command[0], args.command, os.environ)
