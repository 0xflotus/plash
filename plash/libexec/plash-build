#!/usr/bin/env python3
#
# usage: plash build <ACTIONS>
# Builds a container. Any command line options is interpreted as action,
# Use `--list` to list all available action.
#
# exit status:
# 1: Generic error code
# 2: Unrecognized arguments
# 3: Returning container from cache, not building
# 4: Build error - building returned non-zero exit status
#
#
# Examples:
#
# $ plash build -i ubuntu --run 'touch a'
# --> touch a
# --:
# 66
#
# $ plash build -i ubuntu --run 'touch a' --layer --run 'touch b'
# --> touch b
# --:
# 67
#
# $ plash build -i ubuntu --apt nmap
# --> apt-get update
# Hit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease
# Get:2 http://archive.ubuntu.com/ubuntu bionic InRelease [235 kB]
# <snip>
# Setting up nmap (7.60-1ubuntu2) ...
# Processing triggers for libc-bin (2.26-0ubuntu2) ...
# --:
# 68

import os
import re
import subprocess
import sys
from subprocess import DEVNULL, PIPE, CalledProcessError, Popen, check_output

from plash.eval import get_hint_values, hint
from plash.utils import (assert_initialized, catch_and_die, color, die,
                         handle_help_flag, hashstr, info, nodepath_or_die,
                         plash_map)

handle_help_flag()
assert_initialized()

# proxy stdin and argv to plash-eval to generate the build script
with catch_and_die([CalledProcessError], silent=True):
    script = subprocess.check_output(
        ['plash-eval'] + sys.argv[1:],
        stdin=sys.stdin)

p = subprocess.Popen(['plash-build-sh'], stdin=subprocess.PIPE)
p.stdin.write(script)
p.stdin.close()
exit = p.wait()
sys.exit(exit)
