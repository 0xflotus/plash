#!/usr/bin/env python3
#
# usage: plash-exec file [arg1 [arg2 [arg3 ...]]]
# Used as shebang. It runs a plash buildfile.

import os, sys, subprocess
from plashlib.utils import handle_help_flag, die_with_usage, die
from plashlib import ux
import plashlib

handle_help_flag()
ux.assert_initialized()

try:
    file, args = sys.argv[1], sys.argv[2:]
except ValueError:
    die_with_usage()


libdir = os.path.dirname(plashlib.__file__)
libexec = os.path.join(libdir, 'libexec')
os.environ['PATH'] = '{}:{}'.format(libexec, os.environ['PATH'])

file_args = None
with open(file) as f:
    f.readline()
    for i in range(5):
        line = f.readline()
        if line.startswith('# plash-exec: '):
            file_args = dict(i.split('=', 1) for i in line[14:-1].split())
            break
        elif not line.startswith('#'):
            die("file must have a comment on the top: '# plash-exec: exec=<exec>'")
    script = f.read()

run_container = subprocess.run(['plash-build'],
    input=script.encode(), stdout=subprocess.PIPE, check=True
    ).stdout.decode().strip('\n')


run_args = [file_args['exec']] + args

mount = file_args.get('mount')
if mount:
    plash_run_extra_args = ['--mount', mount]
else:
    plash_run_extra_args = []

cmd = [
    'plash-run',
    'plash-run',
    run_container] + plash_run_extra_args + ['--'] + run_args

os.execlp(*cmd)
