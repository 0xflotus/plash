#!/usr/bin/env python3
#
# usage: plash-import protocol://arg
# e.g: plash-import tar://my/file.tar
# available protocols:
#   docker     import a docker image
#   http/https import a tar file at an url
#   lxc        import from linuxcontainers.org
#   tar        import a tar file

from plashlib.utils import nodepath_or_die, catch_and_die, die, handle_help_flag, die_with_usage, hashstr, get_nodepath
from subprocess import check_call, CalledProcessError, DEVNULL
import os
import sys

handle_help_flag()

try:
    arg = sys.argv[1]
except IndexError:
    die_with_usage()

try:
    protocol, protocol_arg = arg.split('://', 1)
except ValueError:
    die('arg mus be in the format of "protocol://image" (try `plash-import --help` for available protocols)')

hashed_arg = hashstr(arg.encode())

# pull container if it does not exists
if not get_nodepath(hashed_arg):
    with catch_and_die([CalledProcessError]):
        if protocol in ('http', 'https'):
            check_call(['plash-import-url-as', arg])
        elif protocol == 'lxc':
            check_call(['plash-import-lxc-as', protocol_arg])
        elif protocol == 'tar':
            check_call(['plash-import-tar-as', protocol_arg])
        elif protocol == 'docker':
            check_call(['plash-import-docker-as', protocol_arg])

#print(hashed_arg)
