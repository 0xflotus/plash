#!/usr/bin/env python3
import json
import os
import sys
import tempfile
from os.path import join
from subprocess import CalledProcessError, check_call
from tempfile import mkdtemp
from uuid import uuid4

from plash.utils import catch_and_die

palsh_data = os.environ.get('PLASH_DATA', '/var/lib/plash')

try:
    container, *cmd = sys.argv[1:]
    cmd[0]
except (IndexError, ValueError):
    print(
        'USAGE: plash runc container cmd [arg1 [arg2 [arg3 ...]]]',
        file=sys.stderr)
    sys.exit(2)

tmp = tempfile.mkdtemp()
os.chdir(tmp)
os.mkdir('./rootfs')
with catch_and_die([CalledProcessError]):
    check_call(['plash.mount', container, './rootfs'])
    check_call(['runc', 'spec'])

with open(join(tmp, 'config.json')) as f:
    bundle = json.loads(f.read())
bundle['hostname'] = container
bundle['process']['args'] = cmd
with open(join(tmp, 'config.json'), 'w') as f:
    f.write(json.dumps(bundle))

cmd = ['runc', 'run', str(uuid4())]
os.execvpe(cmd[0], cmd, os.environ)
